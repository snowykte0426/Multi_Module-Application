name: Deploy Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v3

      - name: 🏗️ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔨 Build with Gradle
        run: ./gradlew build -x test

      - name: 🐳 Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Build and Push Docker Image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/Multi-Module-Spring-Boot-App"
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TIMESTAMP .
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$TIMESTAMP

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 🔑 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to Server with Auto-Rollback
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e

            IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/spring-app"

            echo "🛑 Stopping and removing existing container..."
            docker stop spring-app || true
            docker rm spring-app || true

            echo "📥 Pulling the latest Docker image..."
            docker pull $IMAGE_NAME:latest

            echo "🛠️ Cleaning up unused Docker resources..."
            docker system prune -af

            echo "🚀 Running the new container..."
            docker run -d --name spring-app -p 8080:8080 --restart always \
              -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
            $IMAGE_NAME:latest

            echo "⏳ Waiting for the new container to start..."
            sleep 15

            echo "✅ Checking application health..."
            if ! curl -f http://localhost:8080/actuator/health; then
              echo "❌ Deployment failed! Rolling back to previous version..."
          
              docker stop spring-app || true
              docker rm spring-app || true
          
              LAST_IMAGE_TAG=$(docker images $IMAGE_NAME --format "{{.Tag}}" | sort -r | sed -n '2p')
              if [ -n "$LAST_IMAGE_TAG" ]; then
                docker run -d --name spring-app -p 8080:8080 --restart always $IMAGE_NAME:$LAST_IMAGE_TAG
                echo "🔄 Rolled back to $LAST_IMAGE_TAG"
              else
                echo "⚠️ No previous version found, rollback not possible."
              fi
            else
              echo "✅ Deployment successful!"
            fi
          EOF